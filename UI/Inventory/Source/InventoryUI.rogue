uses Plasmacore
uses UI

class InventoryUI : PlasmacoreUI
  # A 'UI' is the manager of a tree of extended 'UIComponent' objects.
  METHODS
    method init
      # Add components to the UI.
      # Most library components are expand_to_fill by default (versus
      # fixed_size or shrink_to_fit content). That's fine for the top
      # list; we'll set the bottom panel to a fixed_height and the
      # list will fill up the rest.
      local list = UIInventoryList()
      list.add( "Alpha", 1 )
      list.add( "Beta", 2 )
      list.add( "Gamma", 3 )

      local bottom_panel = UIComponent()

      # Instead of making a custom class to allow the bottom panel to respond
      # to size changes, we'll make a resize handler callback.
      bottom_panel.on_resize( (panel)=>panel.fixed_height=Graphics.button_height*2 )

      local increment = UIInventoryButton("+1")
      local decrement = UIInventoryButton("-1")

      # Adding components together with "+" creates a UIHorizontalLayout() and
      # adds each component to it.
      bottom_panel.add( UIFiller.h + increment + UIFiller.h + decrement + UIFiller.h )

      # Stacking components with "/" creates a UIVerticalLayout() and adds each
      # component to it.
      add( UIScrollView(list) / bottom_panel )

    method draw
      # This patches a bug where a high-refresh monitor (75Hz) draws faster than
      # the update cycle (60Hz) which is usually responsible for calling request_redraw
      prior.draw
      request_redraw
endClass

class UIInventoryButton : UIWidget
  METHODS
    method init( label:String )
      prior.init( label, Graphics.font )

    method on_draw
      if (is_pressed)
        display_bounds.fill( Color.WHITE )
        color = Color.BLACK  # font color
        prior.on_draw        # let the text draw
      else
        color = Color.WHITE  # font color
        prior.on_draw
        display_bounds.draw( Color.WHITE, &thickness=Display.density*4 )
      endIf

    method on_resize
      fixed_size = Graphics.button_size
endClass

class UIInventoryList : UIList
  METHODS
    method init
      anchor = Anchor.TOP

    method add( item:String, count:Int32 )
      add( UIInventoryItem(item,count) )
endClass

class UIInventoryItem : UIComponent
  PROPERTIES

  METHODS
    method init( item:String, count:Int32 )
      local label = UILabel( "$ x$"(item,count), Graphics.font )
      add( label )

    method on_resize
      fixed_height = (Graphics.font.height * 1.5).floor
endClass

